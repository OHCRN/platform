datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

enum ConsentGroup {
  ADULT_CONSENT
  ADULT_CONSENT_SUBSTITUTE_DECISION_MAKER
  GUARDIAN_CONSENT_OF_MINOR
  GUARDIAN_CONSENT_OF_MINOR_INCLUDING_ASSENT
  YOUNG_ADULT_CONSENT
}

enum LifecycleState {
  REGISTERED
  CONSENTED
  IN_PROCESSING
  PROFILE_COMPLETE
  PUBLISHED
  DELETION_REQUESTED
  PAUSE_REQUESTED
  CHANGE_REQUESTED
  APPROVED_FOR_DELETION
  PAUSED
  DELETED
}

model Participant {
  id                     String                @id @default("") @db.Char(21)
  consentGroup           ConsentGroup
  emailVerified          Boolean               @default(false)
  isGuardian             Boolean
  guardianIdVerified     Boolean?
  currentLifecycleState  LifecycleState        @default(REGISTERED)
  previousLifecycleState LifecycleState?
  ParticipantResponse    ParticipantResponse[]
}

enum ConsentCategory {
  INFORMED_CONSENT
  CONSENT_RELEASE_DATA
  CONSENT_RESEARCH_PARTICIPATION
  CONSENT_RECONTACT
  CONSENT_REVIEW_SIGN
}

model ConsentQuestion {
  id                  String                @id
  isActive            Boolean               @default(true)
  createdAt           DateTime              @default(now())
  category            ConsentCategory
  ParticipantResponse ParticipantResponse[]
}

model ParticipantResponse {
  id                String          @default("") @db.Char(21)
  participant       Participant     @relation(fields: [participantId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  participantId     String
  consentQuestion   ConsentQuestion @relation(fields: [consentQuestionId], references: [id], onDelete: Restrict, onUpdate: Restrict)
  consentQuestionId String
  response          Boolean
  submittedAt       DateTime        @default(now())

  @@id([id, participantId, consentQuestionId])
}

model ClinicianInvite {
  id                                 String       @id @default("") @db.Char(21)
  clinicianFirstName                 String
  clinicianInstitutionalEmailAddress String
  clinicianLastName                  String
  clinicianTitleOrRole               String
  consentGroup                       ConsentGroup
  consentToBeContacted               Boolean
  inviteSentDate                     DateTime     @default(now()) @db.Date
  inviteAcceptedDate                 DateTime?    @db.Date
  inviteAccepted                     Boolean      @default(false)
}
